components:
  parameters:
    browserName:
      in: path
      name: name
      required: true
      schema:
        $ref: 'schemas.yaml#/components/schemas/BrowserName'
      examples:
        browser:
          value: 'Microsoft Edge'
    browserVersion:
      in: path
      name: version
      required: true
      schema:
        $ref: 'schemas.yaml#/components/schemas/BrowserVersion'
      examples:
        version:
          value: '101'
    ghRepo:
      in: path
      name: repo
      required: true
      description: A GitHub repository name.
      schema:
        type: string
      examples:
        repo:
          value: 'bootstrap'
    ghUser:
      in: path
      name: user
      required: true
      description: A GitHub username.
      schema:
        type: string
      examples:
        user:
          value: 'twbs'
    hash:
      in: path
      name: hash
      required: true
      description: A hex-encoded sha256 of file contents.
      schema:
        type: string
      examples:
        hash:
          value: '87083882cc6015984eb0411a99d3981817f5dc5c90ba24f0940420c5548d82de'
    package:
      in: path
      name: package
      required: true
      description: npm package name.
      schema:
        type: string
      examples:
        package:
          value: 'jquery'
    packageScope:
      in: path
      name: scope
      required: true
      description: npm scope (username, organization).
      schema:
        type: string
      examples:
        scope:
          value: 'popperjs'
    packageScoped:
      in: path
      name: package
      required: true
      description: npm package name.
      schema:
        type: string
      examples:
        package:
          value: 'core'
    platformName:
      in: path
      name: name
      required: true
      schema:
        $ref: 'schemas.yaml#/components/schemas/PlatformName'
      examples:
        platform:
          value: 'Windows'
    platformVersion:
      in: path
      name: version
      required: true
      schema:
        $ref: 'schemas.yaml#/components/schemas/PlatformVersion'
      examples:
        version:
          value: '101'
    proxyName:
      in: path
      name: name
      required: true
      description: The name of the proxy endpoint.
      schema:
        type: string
      examples:
        proxy:
          value: 'cocoa'
    version:
      in: path
      name: version
      required: true
      description: An exact package version (not a version range or a tag)
      schema:
        type: string
      examples:
        version:
          value: '2.2.1'
    badgeType:
      in: query
      name: type
      description: |
        What kind of value to show in the badge:
          1. `hits` number of hits in the selected period.
          2. `rank` rank of the package in the selected period.
          3. `type-rank` rank of the package in the selected period, within its type category (gh/npm).
      schema:
        $ref: 'schemas.yaml#/components/schemas/BadgeType'
    by:
      in: query
      name: by
      description: The value to sort by.
      schema:
        type: string
        enum:
          - hits
          - bandwidth
        default: hits
    continent:
      in: query
      name: continent
      description: Include only data for this continent. Specified as a continent code in uppercase. Mutually exclusive with the `country` parameter.
      schema:
        type: string
        enum:
          - AF
          - AN
          - AS
          - EU
          - NA
          - OC
          - SA
    country:
      in: query
      name: country
      description: Include only data for this country. Specified as an ISO 3166-1 alpha-2 country code in uppercase. Mutually exclusive with the `continent` parameter.
      schema:
        $ref: 'schemas.yaml#/components/schemas/CountryCode'
    limit:
      in: query
      name: limit
      description: Include at most this many results.
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 100
    page:
      in: query
      name: page
      description: |
        Note that an [RFC 8288](https://www.rfc-editor.org/rfc/rfc8288.html) style `Link` header
        is provided with all responses that support pagination so you don't need to set this directly in most cases.
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 1
    period:
      in: query
      name: period
      description: |
        The time period for which the stats are returned. Can be one of the following:
          1. A floating period, which represents:
             - `day` the past 1 day,
             - `week` the past 7 days,
             - `month` the past 30 days,
             - `quarter` the past 90 days,
             - `year` the past 365 days.
          2. A static period, which represents:
             - `s-month` the last calendar month,
             - `s-quarter` the last calendar quarter,
             - `s-year` the last calendar year.
          3. A valid date in:
             - `YYYY-MM` format for a specific month,
             - `YYYY-Qq` format for a specific quarter,
             - `YYYY` format for a specific year.
      schema:
        type: string
        default: month
      examples:
        floating:
          value: 'week'
        static:
          value: 's-month'
        dateMonth:
          value: '2022-08'
        dateQuarter:
          value: '2022-Q1'
        dateYear:
          value: '2022'
    periodStatic:
      in: query
      name: period
      description: |
        The time period for which the stats are returned. Can be one of the following:
          1. A static period, which represents:
             - `s-month` the last calendar month,
             - `s-quarter` the last calendar quarter,
             - `s-year` the last calendar year.
          2. A valid date in:
             - `YYYY-MM` format for a specific month,
             - `YYYY-Qq` format for a specific quarter,
             - `YYYY` format for a specific year.
      schema:
        type: string
        default: s-month
      examples:
        static:
          value: 's-month'
        dateMonth:
          value: '2022-08'
        dateQuarter:
          value: '2022-Q1'
        dateYear:
          value: '2022'
    specifier:
      in: query
      name: specifier
      description: A valid semver version range or a tag.
      schema:
        type: string
        default: latest
      examples:
        range:
          value: '2.2'
        tag:
          value: 'next'
    structure:
      in: query
      name: structure
      description: A structure of the `files` array.
      schema:
        type: string
        enum:
          - tree
          - flat
        default: tree
    type:
      in: query
      name: type
      description: Filter for packages of this type.
      schema:
        type: string
        enum:
          - gh
          - npm
