openapi: 3.1.0
info:
  title: jsDelivr API
  summary: The public jsDelivr API.
  version: 1.3.0
  description: |
    The public jsDelivr API provides information about npm packages, files, versions, entry points,
    as well as their CDN URLs and download stats. The API is free to use and imposes no rate limits.
    However, if you plan to make 100+ RPM for longer periods of time, you should contact us first.

    ## Let us know how you use this API

    If you create a tool/plugin/etc. which uses this API,
    please include a link to your tool in the **User-Agent** header so that we can learn more about how this API is being used.

    ## Endpoints

    https://data.jsdelivr.com/v1/
  termsOfService: https://github.com/jsdelivr/data.jsdelivr.com
  contact:
    url: https://github.com/jsdelivr/data.jsdelivr.com/issues
    email: d@jsdelivr.com
  license:
    name: Open Software License 3.0
    url: https://github.com/jsdelivr/data.jsdelivr.com/blob/master/LICENSE
servers:
  - url: https://data.jsdelivr.com
tags:
  - name: 'Package metadata: GitHub'
    description: |
      Provides information about repository versions and files.
  - name: 'Package metadata: npm'
    description: |
      Provides information about package versions, files, and entry points.
  - name: 'Stats'
    description: |
      Provides a wide range of usage statistics of jsDelivr.
      Most data are available with a two days delay, monthly and yearly summaries are available with a four days delay.
      Please note that different categories of data have different historical availability.
      The [List stat periods](#get-/v1/stats/periods) endpoint provides
      information about which data are available for which time periods.
  - name: 'Stats: packages'
    description: |
      Provides detailed usage information for npm and GitHub packages.
  - name: 'Stats: GitHub packages'
  - name: 'Stats: npm packages'
  - name: 'Stats: network'
    description: |
      Provides network-wide hits and bandwidth stats.
    x-labels:
      - new
  - name: 'Stats: browsers'
    description: |
      Provides browser market share stats.
    x-labels:
      - new
  - name: 'Stats: platforms'
    description: |
      Provides platform market share stats.
    x-labels:
      - new
  - name: 'Stats: proxies'
    description: |
      Provides hits and bandwidth stats for proxy endpoints.
    x-labels:
      - new
  - name: 'Lookup'
paths:
  /v1/packages/gh/{user}/{repo}:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/ghUser'
      - $ref: 'components/parameters.yaml#/components/parameters/ghRepo'
    get:
      summary: 'Get repo metadata'
      operationId: getRepoMetadata
      description: |
        Returns a list of versions for the repository and links to related resources.
        The versions are sorted in descending order using [`v-compare`](https://www.npmjs.com/package/v-compare).
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/ghMetadata200'
        '404':
          $ref: 'components/responses.yaml#/components/responses/404'
      tags:
        - 'Package metadata: GitHub'
  /v1/packages/gh/{user}/{repo}/resolved:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/ghUser'
      - $ref: 'components/parameters.yaml#/components/parameters/ghRepo'
    get:
      summary: Get a resolved version from a range or a tag
      operationId: getResolvedRepoVersion
      description: |
        Returns the latest version matching `specifier` or `null` if there is no matching version.
        Only valid [semver](https://semver.org/) versions are considered.
        Stable versions are prioritized over pre-releases.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/specifier'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/ghResolved200'
        '404':
          $ref: 'components/responses.yaml#/components/responses/404'
      tags:
        - 'Package metadata: GitHub'
  /v1/packages/gh/{user}/{repo}@{version}:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/ghUser'
      - $ref: 'components/parameters.yaml#/components/parameters/ghRepo'
      - $ref: 'components/parameters.yaml#/components/parameters/version'
    get:
      summary: 'Get version metadata'
      operationId: getRepoVersionMetadata
      description: |
        Returns the default file and a list of all files in this version.
        An error is returned if the package size exceeds 50 MB.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/structure'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/ghVersionMetadata200'
        '403':
          $ref: 'components/responses.yaml#/components/responses/403'
        '404':
          $ref: 'components/responses.yaml#/components/responses/404'
      tags:
        - 'Package metadata: GitHub'
  /v1/packages/npm/{package}:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/package'
    get:
      summary: Get package metadata
      operationId: getPackageMetadata
      description: |
        Returns a list of tags and versions for the package and links to related resources.
        The versions are sorted in descending order using [`semver`](https://www.npmjs.com/package/semver).
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/npmMetadata200'
        '404':
          $ref: 'components/responses.yaml#/components/responses/404'
      tags:
        - 'Package metadata: npm'
  /v1/packages/npm/@{scope}/{package}:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/packageScope'
      - $ref: 'components/parameters.yaml#/components/parameters/packageScoped'
    get:
      summary: Get package metadata (scoped)
      operationId: getScopedPackageMetadata
      description: |
        Returns a list of tags and versions for the package and links to related resources.
        The versions are sorted in descending order using [`semver`](https://www.npmjs.com/package/semver).
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/npmMetadataScoped200'
        '404':
          $ref: 'components/responses.yaml#/components/responses/404'
      tags:
        - 'Package metadata: npm'
  /v1/packages/npm/{package}/resolved:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/package'
    get:
      summary: Get a resolved version from a range or a tag
      operationId: getResolvedPackageVersion
      description: |
        Returns the latest version matching `specifier` or `null` if there is no matching version.
        Non-deprecated versions are prioritized over deprecated ones,
        and stable versions are prioritized over pre-releases.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/specifier'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/npmResolved200'
        '404':
          $ref: 'components/responses.yaml#/components/responses/404'
      tags:
        - 'Package metadata: npm'
  /v1/packages/npm/@{scope}/{package}/resolved:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/packageScope'
      - $ref: 'components/parameters.yaml#/components/parameters/packageScoped'
    get:
      summary: Get a resolved version from a range or a tag (scoped)
      operationId: getResolvedScopedPackageVersion
      description: |
        Returns the latest version matching `specifier` or `null` if there is no matching version.
        Non-deprecated versions are prioritized over deprecated ones,
        and stable versions are prioritized over pre-releases.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/specifier'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/npmResolvedScoped200'
        '404':
          $ref: 'components/responses.yaml#/components/responses/404'
      tags:
        - 'Package metadata: npm'
  /v1/packages/npm/{package}@{version}:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/package'
      - $ref: 'components/parameters.yaml#/components/parameters/version'
    get:
      summary: Get version metadata
      operationId: getPackageVersionMetadata
      description: |
        Returns the default file and a list of all files in this version.
        An error is returned if the package size exceeds 100 MB.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/structure'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/npmVersionMetadata200'
        '403':
          $ref: 'components/responses.yaml#/components/responses/403'
        '404':
          $ref: 'components/responses.yaml#/components/responses/404'
      tags:
        - 'Package metadata: npm'
  /v1/packages/npm/@{scope}/{package}@{version}:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/packageScope'
      - $ref: 'components/parameters.yaml#/components/parameters/packageScoped'
      - $ref: 'components/parameters.yaml#/components/parameters/version'
    get:
      summary: Get version metadata (scoped)
      operationId: getScopedPackageVersionMetadata
      description: |
        Returns the default file and a list of all files in this version.
        An error is returned if the package size exceeds 100 MB.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/structure'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/npmVersionMetadataScoped200'
        '403':
          $ref: 'components/responses.yaml#/components/responses/403'
        '404':
          $ref: 'components/responses.yaml#/components/responses/404'
      tags:
        - 'Package metadata: npm'
  /v1/packages/npm/{package}@{version}/entrypoints:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/package'
      - $ref: 'components/parameters.yaml#/components/parameters/version'
    get:
      summary: Get version entry points
      operationId: getPackageVersionEntrypoints
      description: |
        Returns the recommended files to use from this package based on package metadata and additional heuristics.
        The response includes one file of each supported type (js, css), if available.
        The output may change over time as our algorithm improves.
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/npmVersionEntrypoints200'
        '404':
          $ref: 'components/responses.yaml#/components/responses/404'
      tags:
        - 'Package metadata: npm'
  /v1/packages/npm/@{scope}/{package}@{version}/entrypoints:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/packageScope'
      - $ref: 'components/parameters.yaml#/components/parameters/packageScoped'
      - $ref: 'components/parameters.yaml#/components/parameters/version'
    get:
      summary: Get version entry points (scoped)
      operationId: getScopedPackageVersionEntrypoints
      description: |
        Returns the recommended files to use from this package based on package metadata and additional heuristics.
        The response includes one file of each supported type (js, css), if available.
        The output may change over time as our algorithm improves.
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/npmVersionEntrypointsScoped200'
        '404':
          $ref: 'components/responses.yaml#/components/responses/404'
      tags:
        - 'Package metadata: npm'
  /v1/stats/periods:
    get:
      summary: List stats periods
      operationId: listStatsPeriods
      description: |
        Returns a list of all periods for which some stats are available in descending order.
        The `links` property of each period indicates which stats are available.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/periods200'
      tags:
        - Stats
      x-labels:
        - new
      x-code-samples:
        - lang: js
          label: JS - List all months for which browser stats are available
          source: |
            fetch('https://data.jsdelivr.com/v1/stats/periods')
              .then((resp) => resp.json())
              .then((data) => {
                return data.filter((period) => {
                  return period.periodType === 's-month' && period.links.browsers;
                });
              })
              .then(console.log);
  /v1/stats/packages:
    get:
      summary: List top packages
      operationId: listTopPackages
      description: |
        Returns the most popular packages and their stats totals for the selected period.
        More detailed stats can be accessed via the provided links.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/by'
        - $ref: 'components/parameters.yaml#/components/parameters/type'
        - $ref: 'components/parameters.yaml#/components/parameters/period'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/topPackages200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: packages'
  /v1/stats/packages/gh/{user}/{repo}:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/ghUser'
      - $ref: 'components/parameters.yaml#/components/parameters/ghRepo'
    get:
      summary: Get repo stats
      operationId: getRepoStats
      description: |
        Returns daily usage stats for the repository.
        Stats for specific versions can be accessed via the provided link.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/period'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/ghPackageStats200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: GitHub packages'
  /v1/stats/packages/gh/{user}/{repo}/versions:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/ghUser'
      - $ref: 'components/parameters.yaml#/components/parameters/ghRepo'
    get:
      summary: List top repo versions
      operationId: listTopRepoVersions
      description: |
        Returns daily usage stats for the most popular repository versions.
        Stats for the individual version files can be accessed via the provided link.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/by'
        - $ref: 'components/parameters.yaml#/components/parameters/period'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/ghTopRepoVersions200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: GitHub packages'
      x-labels:
        - new
  /v1/stats/packages/gh/{user}/{repo}@{version}:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/ghUser'
      - $ref: 'components/parameters.yaml#/components/parameters/ghRepo'
      - $ref: 'components/parameters.yaml#/components/parameters/version'
    get:
      summary: Get repo version stats
      operationId: getRepoVersionStats
      description: |
        Returns daily usage stats for the specified repository version.
        Stats for the individual version files can be accessed via the provided link.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/period'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/ghRepoVersionStats200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: GitHub packages'
  /v1/stats/packages/gh/{user}/{repo}@{version}/files:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/ghUser'
      - $ref: 'components/parameters.yaml#/components/parameters/ghRepo'
      - $ref: 'components/parameters.yaml#/components/parameters/version'
    get:
      summary: 'List top repo version files'
      operationId: listTopRepoVersionFiles
      description: |
        Returns daily usage stats for the most popular repository version files.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/by'
        - $ref: 'components/parameters.yaml#/components/parameters/period'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/ghTopRepoVersionFiles200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: GitHub packages'
      x-labels:
        - new
  /v1/stats/packages/gh/{user}/{repo}/badge:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/ghUser'
      - $ref: 'components/parameters.yaml#/components/parameters/ghRepo'
    get:
      summary: Get repo badge
      operationId: getRepoBadge
      description: |
        Returns a badge with repo hits or rank.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/badgeType'
        - $ref: 'components/parameters.yaml#/components/parameters/period'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/ghRepoBadge200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: GitHub packages'
  /v1/stats/packages/npm/{package}:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/package'
    get:
      summary: Get package stats
      operationId: getPackageStats
      description: |
        Returns daily usage stats for the package.
        Stats for specific versions can be accessed via the provided link.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/period'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/npmPackageStats200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: npm packages'
  /v1/stats/packages/npm/@{scope}/{package}:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/packageScope'
      - $ref: 'components/parameters.yaml#/components/parameters/packageScoped'
    get:
      summary: Get package stats (scoped)
      operationId: getScopedPackageStats
      description: |
        Returns daily usage stats for the package.
        Stats for specific versions can be accessed via the provided link.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/period'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/npmPackageStatsScoped200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: npm packages'
  /v1/stats/packages/npm/{package}/versions:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/package'
    get:
      summary: List top package versions
      operationId: listTopPackageVersions
      description: |
        Returns daily usage stats for the most popular package versions.
        Stats for the individual version files can be accessed via the provided link.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/by'
        - $ref: 'components/parameters.yaml#/components/parameters/period'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/npmTopPackageVersions200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: npm packages'
      x-labels:
        - new
  /v1/stats/packages/npm/@{scope}/{package}/versions:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/packageScope'
      - $ref: 'components/parameters.yaml#/components/parameters/packageScoped'
    get:
      summary: List top package versions (scoped)
      operationId: listTopScopedPackageVersions
      description: |
        Returns daily usage stats for the most popular package versions.
        Stats for the individual version files can be accessed via the provided link.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/by'
        - $ref: 'components/parameters.yaml#/components/parameters/period'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/npmTopPackageVersionsScoped200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: npm packages'
      x-labels:
        - new
  /v1/stats/packages/npm/{package}@{version}:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/package'
      - $ref: 'components/parameters.yaml#/components/parameters/version'
    get:
      summary: Get package version stats
      operationId: getPackageVersionStats
      description: |
        Returns daily usage stats for the specified package version.
        Stats for the individual version files can be accessed via the provided link.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/period'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/npmPackageVersionStats200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: npm packages'
  /v1/stats/packages/npm/@{scope}/{package}@{version}:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/packageScope'
      - $ref: 'components/parameters.yaml#/components/parameters/packageScoped'
      - $ref: 'components/parameters.yaml#/components/parameters/version'
    get:
      summary: Get package version stats (scoped)
      operationId: getScopedPackageVersionStats
      description: |
        Returns daily usage stats for the specified package version.
        Stats for the individual version files can be accessed via the provided link.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/period'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/npmPackageVersionStatsScoped200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: npm packages'
  /v1/stats/packages/npm/{package}@{version}/files:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/package'
      - $ref: 'components/parameters.yaml#/components/parameters/version'
    get:
      summary: List top package version files
      operationId: listTopPackageVersionFiles
      description: |
        Returns daily usage stats for the most popular package version files.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/by'
        - $ref: 'components/parameters.yaml#/components/parameters/period'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/npmTopRepoVersionFiles200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: npm packages'
      x-labels:
        - new
  /v1/stats/packages/npm/@{scope}/{package}@{version}/files:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/packageScope'
      - $ref: 'components/parameters.yaml#/components/parameters/packageScoped'
      - $ref: 'components/parameters.yaml#/components/parameters/version'
    get:
      summary: List top package version files (scoped)
      operationId: listTopScopedPackageVersionFiles
      description: |
        Returns daily usage stats for the most popular package version files.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/by'
        - $ref: 'components/parameters.yaml#/components/parameters/period'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/npmTopRepoVersionFilesScoped200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: npm packages'
      x-labels:
        - new
  /v1/stats/packages/npm/{package}/badge:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/package'
    get:
      summary: Get package badge
      operationId: getPackageBadge
      description: |
        Returns a badge with package hits or rank.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/badgeType'
        - $ref: 'components/parameters.yaml#/components/parameters/period'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/npmPackageBadge200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: npm packages'
  /v1/stats/packages/npm/@{scope}/{package}/badge:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/packageScope'
      - $ref: 'components/parameters.yaml#/components/parameters/packageScoped'
    get:
      summary: Get package badge (scoped)
      operationId: getScopedPackageBadge
      description: |
        Returns a badge with package hits or rank.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/badgeType'
        - $ref: 'components/parameters.yaml#/components/parameters/period'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/npmPackageBadgeScoped200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: npm packages'
  /v1/stats/network:
    get:
      summary: Get network-wide stats
      operationId: getNetworkStats
      description: |
        Returns network-wide hits and bandwidth stats, with breakdowns by provider and date.
        The list of providers may change over time. Only providers that served some traffic in the selected period are returned.
        The provider codes are:
         - `BN` Bunny
         - `CF` Cloudflare
         - `FY` Fastly
         - `GC` Gcore
         - `MX` StackPath
         - `QT` Quantil
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/continent'
        - $ref: 'components/parameters.yaml#/components/parameters/country'
        - $ref: 'components/parameters.yaml#/components/parameters/period'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/networkStats200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: network'
  /v1/stats/network/content:
    get:
      summary: Get network-wide content stats
      operationId: getNetworkContentStats
      description: |
        Returns network-wide hits and bandwidth stats, with breakdown by content type (packages, proxy endpoints, other) and date.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/period'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/networkContentStats200'
      tags:
        - 'Stats: network'
  /v1/stats/network/countries:
    get:
      summary: Get network-wide country stats
      operationId: getNetworkCountriesStats
      description: |
        Returns network-wide hits and bandwidth stats, with breakdown by country and provider.
        The list of providers may change over time. Only providers that served some traffic in the selected period are returned.
        The provider codes are:
         - `BN` Bunny
         - `CF` Cloudflare
         - `FY` Fastly
         - `GC` Gcore
         - `MX` StackPath
         - `QT` Quantil
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/period'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/networkCountryStats200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: network'
  /v1/stats/browsers:
    get:
      summary: List top browsers (grouped versions)
      operationId: listTopBrowsers
      description: |
        Returns a list of the most popular browsers with stats combined across all versions and platforms.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/continent'
        - $ref: 'components/parameters.yaml#/components/parameters/country'
        - $ref: 'components/parameters.yaml#/components/parameters/periodStatic'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/browsers200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: browsers'
  /v1/stats/browsers/versions:
    get:
      summary: List top browsers (separate versions)
      operationId: listTopBrowsersVersions
      description: |
        Returns a list of the most popular browsers with each major version listed separately.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/continent'
        - $ref: 'components/parameters.yaml#/components/parameters/country'
        - $ref: 'components/parameters.yaml#/components/parameters/periodStatic'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/browsersVersions200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: browsers'
  /v1/stats/browsers/{name}/countries:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/browserName'
    get:
      summary: List top browser countries
      operationId: listTopBrowserCountries
      description: |
        Returns countries ordered by the market share of the specified browser.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/continent'
        - $ref: 'components/parameters.yaml#/components/parameters/country'
        - $ref: 'components/parameters.yaml#/components/parameters/periodStatic'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/browserCountries200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: browsers'
  /v1/stats/browsers/{name}/platforms:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/browserName'
    get:
      summary: List top browser platforms
      operationId: listTopBrowserPlatforms
      description: |
        Returns platforms ordered by their percentage share on all requests by the specified browser.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/continent'
        - $ref: 'components/parameters.yaml#/components/parameters/country'
        - $ref: 'components/parameters.yaml#/components/parameters/periodStatic'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/browserPlatforms200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: browsers'
  /v1/stats/browsers/{name}/versions:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/browserName'
    get:
      summary: List top browser versions
      operationId: listTopBrowserVersions
      description: |
        Returns the browser versions ordered by their market share.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/continent'
        - $ref: 'components/parameters.yaml#/components/parameters/country'
        - $ref: 'components/parameters.yaml#/components/parameters/periodStatic'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/browserVersions200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: browsers'
  /v1/stats/browsers/{name}/versions/{version}/countries:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/browserName'
      - $ref: 'components/parameters.yaml#/components/parameters/browserVersion'
    get:
      summary: List top browser version countries
      operationId: listTopBrowserVersionCountries
      description: |
        Returns countries ordered by the market share of the specified browser version.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/continent'
        - $ref: 'components/parameters.yaml#/components/parameters/country'
        - $ref: 'components/parameters.yaml#/components/parameters/periodStatic'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/browserVersionCountries200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: browsers'
  /v1/stats/platforms:
    get:
      summary: List top platforms (grouped versions)
      operationId: listTopPlatforms
      description: |
        Returns a list of the most popular platforms with stats combined across all versions.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/continent'
        - $ref: 'components/parameters.yaml#/components/parameters/country'
        - $ref: 'components/parameters.yaml#/components/parameters/periodStatic'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/platforms200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: platforms'
  /v1/stats/platforms/versions:
    get:
      summary: List top platforms (separate versions)
      operationId: listTopPlatformsVersions
      description: |
        Returns a list of the most popular platforms with each major version listed separately.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/continent'
        - $ref: 'components/parameters.yaml#/components/parameters/country'
        - $ref: 'components/parameters.yaml#/components/parameters/periodStatic'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/platformsVersions200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: platforms'
  /v1/stats/platforms/{name}/browsers:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/platformName'
    get:
      summary: List top platform browsers
      operationId: listTopPlatformBrowsers
      description: |
        Returns browsers ordered by their percentage share on all requests on the specified platform.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/continent'
        - $ref: 'components/parameters.yaml#/components/parameters/country'
        - $ref: 'components/parameters.yaml#/components/parameters/periodStatic'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/platformBrowsers200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: platforms'
  /v1/stats/platforms/{name}/countries:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/platformName'
    get:
      summary: List top platform countries
      operationId: listTopPlatformCountries
      description: |
        Returns countries ordered by the market share of the specified platform.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/continent'
        - $ref: 'components/parameters.yaml#/components/parameters/country'
        - $ref: 'components/parameters.yaml#/components/parameters/periodStatic'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/platformCountries200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: platforms'
  /v1/stats/platforms/{name}/versions:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/platformName'
    get:
      summary: List top platform versions
      operationId: listTopPlatformVersions
      description: |
        Returns the platform versions ordered by their market share.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/continent'
        - $ref: 'components/parameters.yaml#/components/parameters/country'
        - $ref: 'components/parameters.yaml#/components/parameters/periodStatic'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/platformVersions200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: platforms'
  /v1/stats/platforms/{name}/versions/{version}/countries:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/platformName'
      - $ref: 'components/parameters.yaml#/components/parameters/platformVersion'
    get:
      summary: List top platform version countries
      operationId: listTopPlatformVersionCountries
      description: |
        Returns countries ordered by the market share of the specified platform version.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/continent'
        - $ref: 'components/parameters.yaml#/components/parameters/country'
        - $ref: 'components/parameters.yaml#/components/parameters/periodStatic'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/platformVersionCountries200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: platforms'
  /v1/stats/proxies/{name}:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/proxyName'
    get:
      summary: Get proxy stats
      operationId: getProxyStats
      description: |
        Returns daily usage stats for the proxy.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/period'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/proxyStats200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: proxies'
  /v1/stats/proxies/{name}/files:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/proxyName'
    get:
      summary: List top proxy files
      operationId: listTopProxyFiles
      description: |
        EXPERIMENTAL: This feature may change or be removed in the future.

        Returns stats for the most popular proxy files.
      parameters:
        - $ref: 'components/parameters.yaml#/components/parameters/by'
        - $ref: 'components/parameters.yaml#/components/parameters/period'
        - $ref: 'components/parameters.yaml#/components/parameters/limit'
        - $ref: 'components/parameters.yaml#/components/parameters/page'
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/topProxyFiles200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
      tags:
        - 'Stats: proxies'
      x-badges:
        - color: red
          label: Experimental
  /v1/lookup/hash/{hash}:
    parameters:
      - $ref: 'components/parameters.yaml#/components/parameters/hash'
    get:
      summary: Get file metadata from file hash
      operationId: lookupFileHash
      description: |
        Allows a reverse lookup of a file at the CDN by its hash. Works only for files which were accessed at least once.
        If there are multiple files with the same hash, only the one which was accessed first via the CDN is returned.
      responses:
        '200':
          $ref: 'components/responses.yaml#/components/responses/lookupHash200'
        '400':
          $ref: 'components/responses.yaml#/components/responses/400'
        '404':
          $ref: 'components/responses.yaml#/components/responses/404'
      tags:
        - Lookup
